- name: Accept MQ License
  shell: "cd /tmp/MQServer/ && ./mqlicense.sh -accept"
  register: license_out 

- name: Collect a list of MQ packages to install
  shell: "ls /tmp/MQServer/MQSeries*"
  register: packagelist

- debug:
    var: packagelist.stdout_lines
    verbosity: 1

- name: Install MQ Software RPMS
  when: os == 'rhel'
  ansible.builtin.dnf:
    name: "{{ packagelist.stdout_lines }}" 
    disable_gpg_check: true
    state: present

- name: Install MQ Software DEB files
  when: os == 'ubuntu'
  ansible.builtin.apt:
    name: "{{ packagelist.stdout_lines }}" 
    allow_unauthenticated: true
    state: present

- name: Run setmqinst on primary nodes
  when: "'primary' in mq_role"
  shell: "{{ MQ_INSTALLATION_PATH }}/bin/setmqinst -i -p {{ MQ_INSTALLATION_PATH }}"
  register: setmqinst

- name: Install RDQM
  when: "enable_rdqm|bool"
  block:
  - name: Get our DRBD kmod version and set it as a fact
    shell: /tmp/MQServer/Advanced/RDQM/PreReqs/{{ rel }}/kmod-drbd-9/modver
    register: kmodver
    failed_when: kmodver.rc == 1

  - name: Collect a list of pacemaker packages to install
    shell: "ls /tmp/MQServer/Advanced/RDQM/PreReqs/{{ rel }}/pacemaker-2/*"
    register: pacemakerlist
    
  - name: Collect a list of drbd packages to install
    shell: "ls /tmp/MQServer/Advanced/RDQM/PreReqs/{{ rel }}/drbd-utils-9/drbd-*"
    register: drbdlist

  - name: Grab the name of the RDQM package to install
    shell: "ls /tmp/MQServer/Advanced/RDQM/MQSeriesRDQM-*"
    register: rdqmpkg

  - name: Install DRBD kmod
    ansible.builtin.dnf:
      name: "/tmp/MQServer/Advanced/RDQM/PreReqs/{{ rel }}/kmod-drbd-9/{{ kmodver.stdout }}" 
      disable_gpg_check: true
      state: present

  - name: Install pacemaker packages
    ansible.builtin.dnf:
      name: "{{ pacemakerlist.stdout_lines }}"
      disable_gpg_check: true
      state: present

  - name: Install drbd packages
    ansible.builtin.dnf:
      name: "{{ drbdlist.stdout_lines }}"
      disable_gpg_check: true
      state: present

  - name: Install RDQM Package
    ansible.builtin.dnf:
      name: "{{ rdqmpkg.stdout }}"
      disable_gpg_check: true
      state: present

  - name: Set the SELinux Context for drbd
    shell: semanage permissive -a drbd_t

  - name: Set the mq user to be in the haclient group
    ansible.builtin.user:
      name: "mqm"
      groups: "haclient"
      append: true

  - name: Generate the rdqm.ini file for primary hosts
    when: "'active' in dr_state"
    ansible.builtin.template:
      src: templates/rdqm_PR.ini.j2
      dest: /var/mqm/rdqm.ini
      owner: mqm
      group: mqm
      mode: '0644'
    vars:
      hostgroup: "{{ groups['primary'] }}"
    register: createdrdqmprimary

  - name: Generate the rdqm.ini file for standby hosts
    when: "'passive' in dr_state"
    ansible.builtin.template:
      src: templates/rdqm_DR.ini.j2
      dest: /var/mqm/rdqm.ini
      owner: mqm
      group: mqm
      mode: '0644'
    vars:
      hostgroup: "{{ groups['standby'] }}"
    register: createdrdqmstandby

  - name: Enable the local cluster
    shell: "/opt/mqm/bin/rdqmadm -c"
    register: clusterconfigprimary
    failed_when: clusterconfigprimary.rc != 0
    when: createdrdqmprimary.changed

  - name: Enable the remote cluster
    shell: "/opt/mqm/bin/rdqmadm -c"
    register: clusterconfigstandby
    failed_when: clusterconfigstandby.rc != 0
    when: "'passive' in dr_state and createdrdqmstandby.changed"
